{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/review/review.component.css","webpack:///./src/app/components/review/review.component.html","webpack:///./src/app/components/review/review.component.ts","webpack:///./src/app/models/review.ts","webpack:///./src/app/services/review-service.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ReviewComponent } from './components/review/review.component';\r\n\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: ReviewComponent },\r\n  { path: '**', component: ReviewComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n  </h1>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  constructor(private activatedRoute: ActivatedRoute) {\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {ChartModule} from 'primeng/chart';\r\nimport { AppComponent } from './app.component';\r\nimport { ReviewComponent } from './components/review/review.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {\r\n  FieldsetModule,\r\n  CalendarModule,\r\n  InputTextModule,\r\n  ProgressSpinnerModule,\r\n  DialogModule,\r\n  TabViewModule,\r\n  DropdownModule,\r\n  InputTextareaModule,\r\n  MessagesModule,\r\n  MessageModule,\r\n  PanelModule,\r\n  AccordionModule,\r\n  ConfirmDialogModule,\r\n  GrowlModule,\r\n  CheckboxModule,\r\n  RadioButtonModule,\r\n  \r\n} from 'primeng/primeng';\r\nimport {TooltipModule} from 'primeng/tooltip';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ReviewComponent\r\n  ],\r\n  imports: [\r\n    TooltipModule,\r\n    ButtonModule,\r\n    FormsModule,\r\n    PanelModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    ChartModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FieldsetModule,\r\n    CalendarModule,\r\n    InputTextModule,\r\n    ProgressSpinnerModule,\r\n    DialogModule,\r\n    TabViewModule,\r\n    DropdownModule,\r\n    InputTextareaModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    PanelModule,\r\n    AccordionModule,\r\n    ConfirmDialogModule,\r\n    GrowlModule,\r\n    CheckboxModule,\r\n    RadioButtonModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n    <h1>\\r\\n      Welcome to Hackathon Online Service!\\r\\n    </h1>\\r\\n    <div class=\\\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\\\" style=\\\"margin: 10px 0px\\\">\\r\\n      <div class=\\\"ui-grid-row\\\">\\r\\n          <div class=\\\"ui-grid-col-1\\\" style=\\\"text-align:right\\\">\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-5\\\">\\r\\n            <p-chart type=\\\"pie\\\" [data]=\\\"data\\\" width=\\\"40vw\\\" [options]=\\\"options\\\" height=\\\"80vh\\\" (onDataSelect)=\\\"selectData($event)\\\"></p-chart>\\r\\n          </div>\\r\\n          <div class=\\\"ui-grid-col-6\\\" style=\\\"text-align:right\\\">\\r\\n            <div class=\\\"ui-grid-row\\\" style=\\\"margin: 50px 0px\\\">\\r\\n                <div class=\\\"ui-grid-col-5\\\" style=\\\"text-align:right\\\">\\r\\n                 \\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-col-4\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            <div class=\\\"ui-grid-row\\\" style=\\\"margin: 10px 0px\\\">\\r\\n                <div class=\\\"ui-grid-col-5\\\" style=\\\"text-align:right\\\">\\r\\n                 \\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-col-4\\\">\\r\\n                    Your Satifcation Level<span style=\\\"color:red\\\">*</span>:\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"ui-grid-row\\\" style=\\\"margin: 10px 0px\\\">\\r\\n                <div class=\\\"ui-grid-col-5\\\" style=\\\"text-align:right\\\">\\r\\n                    <p-message severity=\\\"error\\\" text=\\\"Required\\\" *ngIf=\\\"ratingType.errors?.required\\\"></p-message>\\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-col-4\\\">\\r\\n                  <p-dropdown [options]=\\\"ratingTypes\\\" name=\\\"ratingType\\\" #ratingType=\\\"ngModel\\\" [(ngModel)]=\\\"review.r_type_id\\\" placeholder=\\\"--Select--\\\"></p-dropdown>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"ui-grid-row\\\">\\r\\n                <div class=\\\"ui-grid-col-5\\\" style=\\\"text-align:right\\\">\\r\\n                  \\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-col-4\\\">\\r\\n                    Your Comments (Max Length 250 char):\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"ui-grid-row\\\">\\r\\n                <div class=\\\"ui-grid-col-5\\\" style=\\\"text-align:right\\\">\\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-col-4\\\">\\r\\n                    <textarea asdfatype=\\\"text\\\" pInputTextarea name=\\\"reviewComments\\\" maxlength=\\\"250\\\" [(ngModel)]=\\\"review.r_comment\\\" \\r\\n                    [rows]=\\\"5\\\" [cols]=\\\"30\\\" autoResize=\\\"autoResize\\\" #reviewComments=\\\"ngModel\\\"></textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"ui-grid-row\\\">\\r\\n                <div class=\\\"ui-grid-col-5\\\" style=\\\"text-align:right\\\">\\r\\n                </div>\\r\\n                <div class=\\\"ui-grid-col-4\\\">\\r\\n                    <button pButton type=\\\"button\\\" [disabled]=\\\"!review.r_type_id\\\" label=\\\"Submit Your Feedback\\\"  icon=\\\"fa fa-plus\\\" (click)=\\\"submitNewReview(review)\\\"></button>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n          </div>\\r\\n      </div>\\r\\n  \\r\\n  </div>\\r\\n  \\r\\n    \\r\\n  </div>\"","import { Component, OnInit, Injectable} from '@angular/core';\r\nimport { ReviewSearchResultItem } from '../../models/review-search-result-item';\r\nimport { ReviewService } from '../../services/review-service.service';\r\nimport { RatingType } from 'src/app/models/rating-type';\r\nimport { Review } from 'src/app/models/review';\r\nimport { SelectItem} from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-review',\r\n  templateUrl: './review.component.html',\r\n  styleUrls: ['./review.component.css']\r\n})\r\n\r\nexport class ReviewComponent implements OnInit {\r\n\r\n  data: any;\r\n  reviews: ReviewSearchResultItem[];\r\n  options: any;\r\n  excellentCount: number;\r\n  moderateCount: number;\r\n  poorCount: number;\r\n  review: Review;\r\n  ratingTypes: SelectItem[];\r\n  constructor(private reviewService: ReviewService) {\r\n     this.resetData();\r\n     this.reviews = new Array();\r\n     this.review = new Review();\r\n     this.ratingTypes = [{label: 'Excellent', value: 1},\r\n                        {label: 'Moderate', value: 2},\r\n                        {label: 'Needs Improvement', value: 3}];\r\n  }\r\n\r\n  private resetData() {\r\n    this.excellentCount = 0;\r\n    this.moderateCount = 0;\r\n    this.poorCount = 0;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadReviews();\r\n  }\r\n\r\n  private loadReviews() {\r\n    this.reviewService.loadReviews().subscribe(results => {\r\n      this.reviews = results;\r\n      results.forEach((element) => {\r\n        const rate_type: RatingType = element.r_type;\r\n        if (rate_type) {\r\n          switch (rate_type.rate_type_id) {\r\n            case 1:\r\n              this.excellentCount++;\r\n              break;\r\n            case 2:\r\n              this.moderateCount++;\r\n              break;\r\n            case 3:\r\n              this.poorCount++;\r\n              break;\r\n          }\r\n        }\r\n      });\r\n      this.data = {\r\n        labels: ['Excellent', 'Moderate', 'Needs Improvement'],\r\n        datasets: [\r\n          {\r\n            data: [this.excellentCount, this.moderateCount, this.poorCount],\r\n            backgroundColor: [\r\n              \"#03fc62\",\r\n              \"#fcdb03\",\r\n              \"#fc033d\"\r\n            ],\r\n            hoverBackgroundColor: [\r\n              \"#03fc62\",\r\n              \"#fcdb03\",\r\n              \"#fc033d\"\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      this.options = {\r\n        title: {\r\n          display: true,\r\n          text: 'Service Satisfaction Survey',\r\n          fontSize: 16\r\n        },\r\n        legend: {\r\n          position: 'bottom'\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n   submitNewReview(review: Review) {\r\n     this.reviewService.saveReview(review).subscribe(results => {\r\n       this.review = new Review();\r\n       this.resetData();\r\n       this.loadReviews();\r\n     });\r\n  }\r\n}\r\n","export class Review {\r\n\r\n  r_type_id: Number;\r\n  r_comment: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {environment} from '../../environments/environment';\r\nimport { ReviewSearchResultItem } from '../models/review-search-result-item';\r\nimport { Review } from '../models/review';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json',\r\n    'Authorization': 'my-auth-token'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReviewService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  public loadReviews( ):  Observable<any> {\r\n    return this.http.get<Observable<ReviewSearchResultItem[]>>(environment.api + '/v1/reviews', httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  public loadReviewDetail(reviewId: string):  Observable<any> {\r\n    return this.http.get<Observable<ReviewSearchResultItem>>(environment.api\r\n      + '/v1/reviews/' + reviewId,  httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  public saveReview(review: Review):  Observable<any> {\r\n    return this.http.post<Observable<Review>>(environment.api + '/v1/review', review, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: 'http://localhost:8001'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}